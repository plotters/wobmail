package net.xytra.wobmail.application;
// Generated by the WOLips Templateengine Plug-in at Apr 18, 2007 9:01:26 PM

import java.util.HashMap;
import java.util.Locale;
import java.util.Map;

import net.xytra.wobmail.components.Main;
import net.xytra.wobmail.mailconn.WobmailStoreType;
import net.xytra.wobmail.mailconn.manager.Pop3WobmailSessionManager;
import net.xytra.wobmail.mailconn.manager.WobmailSessionManager;
import net.xytra.wobmail.util.LocaleUtils;

import com.webobjects.foundation.NSLog;
import com.webobjects.foundation._NSUtilities;

import er.extensions.appserver.ERXApplication;
import er.extensions.foundation.ERXProperties;
import er.extensions.logging.ERXLogger;

public class Application extends ERXApplication
{
	private String defaultIncomingMailServerAddress;
	private WobmailStoreType defaultIncomingMailServerType;

	private Map<WobmailStoreType, WobmailSessionManager> sessionManagerRegistry = new HashMap<WobmailStoreType, WobmailSessionManager>();

	public static void main(String argv[]) {
		ERXApplication.main(argv, Application.class);
	}

	public Application() {
		super();
		NSLog.out.appendln("Welcome to " + this.name() + " !");

		// Make sure WO recognizes the Main component:
		_NSUtilities.setClassForName(Main.class, "Main");

		// Set default locale to the default ERXLocalizer parameter:
		Locale.setDefault(LocaleUtils.defaultERXLocalizerLocale());

		sessionManagerRegistry.put(WobmailStoreType.pop3, Pop3WobmailSessionManager.instance());
	}

	public String getDefaultIncomingMailServerAddress()
	{
		if (this.defaultIncomingMailServerAddress == null)
		{
			this.defaultIncomingMailServerAddress = ERXProperties.stringForKeyWithDefault(
					"net.xytra.wobmail.DefaultIncomingMailServerAddress",
					"localhost");
		}

		return (this.defaultIncomingMailServerAddress);
	}

	public WobmailStoreType getDefaultIncomingMailServerType() {
		if (defaultIncomingMailServerType == null) {
			String storeTypeString = ERXProperties.stringForKeyWithDefault(
					"net.xytra.wobmail.DefaultIncomingMailServerType",
					"pop3");

			try {
				defaultIncomingMailServerType = WobmailStoreType.valueOf(storeTypeString);
			} catch (IllegalArgumentException e) {
				// invalid store type: inform but choose default pop3 anyway
				ERXLogger.log.warn("Invalid net.xytra.wobmail.DefaultIncomingMailServerType specified, choosing pop3", e);
				defaultIncomingMailServerType = WobmailStoreType.pop3;
			}
			
		}

		return (defaultIncomingMailServerType);
	}

	public WobmailSessionManager getDefaultSessionManager() {
		return (getSessionManagerForStoreType(getDefaultIncomingMailServerType()));
	}

	public WobmailSessionManager getSessionManagerForStoreType(WobmailStoreType storeType) {
		return (sessionManagerRegistry.get(storeType));
	}

}
